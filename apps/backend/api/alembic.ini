# Универсальная конфигурация Alembic для одного подключения к базе данных

[alembic]
# Путь до папки с миграционными скриптами.
# Используйте прямой слэш (/) даже в Windows — так кроссплатформенно.
script_location = migrations

# Шаблон для генерации имён файлов миграций.
# По умолчанию используется %%(rev)s_%%(slug)s
# Здесь мы включаем дату и время — это удобно для отслеживания истории изменений
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Путь, который будет добавлен в sys.path при запуске Alembic
prepend_sys_path = .

# Часовой пояс, используемый при генерации даты в имени миграции.
# По умолчанию — локальное время. Для поддержки часовых поясов можно установить alembic[tz]
# timezone =

# Максимальная длина "slug" — части имени миграционного файла, формируемой из описания
# truncate_slug_length = 40

# При включении выполняет файл окружения (env.py) даже при генерации миграции
# revision_environment = false

# Разрешить искать .pyc и .pyo файлы без исходного .py в папке версий миграций
# sourceless = false

# Путь до папки с миграциями по версиям.
# Если используется несколько директорий миграций, укажите их через :
# По умолчанию используется `migrations/versions`
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# Разделитель путей между папками версий миграций
# Возможные значения: os, :, ;, space и т.д.
version_path_separator = os  # Использовать системный разделитель путей (os.pathsep)

# Рекурсивный поиск файлов в каждой папке миграций (с версии Alembic 1.10)
# recursive_version_locations = false

# Кодировка, используемая при записи файлов миграций
output_encoding = utf-8

# ⚠️ ВНИМАНИЕ: Эта строка не используется напрямую, если вы переопределяете URL через env.py
sqlalchemy.url = driver://user:pass@localhost/dbname


[post_write_hooks]
# Хуки, которые запускаются после генерации новых миграций.
# Используются для автопереносов, форматирования кода, линтинга и т.д.

# Используем "black" для форматирования миграционного файла
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 89 REVISION_SCRIPT_FILENAME

# Можно также подключить "ruff" для автоматического линтинга:
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME


# Настройки логирования Alembic

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

# Основной логгер
[logger_root]
level = WARN
handlers = console
qualname =

# Логгер SQLAlchemy
[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

# Логгер Alembic
[logger_alembic]
level = INFO
handlers =
qualname = alembic

# Консольный обработчик (куда выводятся логи)
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# Формат логов
[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
